   @app.route("/drinks-update/<int:id>", methods=["PATCH"])
    @requires_auth("patch:drinks")
    def update_drinks(jwt, id):
        try:
            id = id
            drink = Drink.query.get(Drink.id == id).one_or_none()
            body = dict(request.form or request.json or request.data)
            if drink is None:
                return json.dumps({"None drink found"}), 404
            else:
                if body.get("title"):
                    drink.title = body.get("title")
                else:
                    drink.title
                if body.get("recipe"):
                    updated_recipe = body.get("recipe")
                    drink.recipe = json.dumps({updated_recipe})
                else:
                    drink.recipe

                drink.update()
                return (json.dumps({"success": True, "drinks": drink.long()}), 200)

        except Exception:
            abort(422)




    @app.route("/drinks-delete/<int:drink_id>", methods=["DELETE"])
    @requires_auth("delete:drinks")
    def delete_drink(jwt, drink_id):
        try:
            drink = Drink.query.filter(Drink.id == drink_id).one_or_none()
            if drink is None:
                return json.dumps({"None drink found"}), 404
            else:
                drink.delete()

            return( json.dumps(
                    {
                        "success": True,
                        "deleted": drink.id,
                    }),200)
            
        except Exception:
            abort(400)
